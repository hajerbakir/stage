import React from 'react'
import Head from "next/head";
import MenuApp from "../src/components/Menu";
import ModalSalle from "../src/components/modalSalle";
import ModalUpdateSalle from "../src/components/modalUpdateSalle[slug]";
import ModalReservation from "../src/components/modalReservation[slug]";
import { Space } from '@mantine/core'
import { useDisclosure } from '@mantine/hooks';
import { Loader } from '@mantine/core';
import { useQuery, gql } from "@apollo/client";
import { Image } from '@mantine/core';
import { Grid , Card ,Group, Badge,Text,Button} from '@mantine/core';
import { useRouter } from "next/router";


const GET_SALLES = gql`
query GetSalles {
    getSalles {
      id
      etage
      num_salle
      nbr_chaises
      acces_handicape
      micro
      video_projecteur
      sound_proof
      climatiseur
      image
    }  } `;
 
    const GET_RESERVATIONS = gql`
query GetReservations {
  getReservations {
    salle {
      id
    }
    etat
  }
}`;

export default function Salles() {
  const router = useRouter(); 
    const [opened, { open, close }] = useDisclosure(false);
    const { loading, error, data } = useQuery(GET_SALLES);
    if (error) return <p>Error: {error.message}</p>;
    const salles = data?.getSalles;
      
  const {  loading2,error2,data:data2 } = useQuery(GET_RESERVATIONS);
  if (error2) return <p>Error: {error2.message}</p>;
  if (loading2) return <p>Loading...</p>;
  const reservations = data2?.getReservations;

  return (
    <div>
     <Head>
        <title>Front</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        
      </Head>

      <main >
        
        
      <Space h="md" />
      <MenuApp />

      <ModalSalle/>
    

      <h2 style={{ textAlign: 'center' }}>List des salles :</h2>
      
      {loading ? (
        <Loader/>
      ) : (
        <ul><Grid  gutterXl={25}>
          {salles?.map((salle) => (
                <Grid.Col key={salle.id} md={6} lg={3}>
                <Card shadow="sm" padding="lg" radius="md" withBorder>
              <Card.Section>
                  <Image
                    src={salle.image}
                    height={160}
                  />
        
              </Card.Section>
              
              <Text size="sm">
                etage : {salle.etage}
              </Text>
              <Text size="sm">
                num salle : {salle.num_salle}
              </Text>
              <Text size="sm">
                nbr chaises : {salle.nbr_chaises}
              </Text>
              
              {salle.micro ? (
            <Text size="sm" >micro</Text>
                ) : <Text td="line-through">micro</Text>}
                {salle.video_projecteur ? (
            <Text size="sm">video_projecteur</Text>
                ) : <Text td="line-through">vide projecteur</Text>}
                {salle.sound_proof ? (
            <Text size="sm">sound_proof</Text>
                ) : <Text td="line-through">sound proof</Text>}
                {salle.climatiseur ? (
            <Text size="sm">climatiseur</Text>
                ) : <Text td="line-through">climatiseur</Text>}
                {salle.acces_handicape ? (
            <Text size="sm">acces_handicape</Text>
                ) : <Text td="line-through">acces handicape</Text>}
              
        


              <Group position="center">
              {/* {reservations?.map((reservation) => (
                console.log(salle.id,":",reservation.salle.id === salle.id && reservation.etat ),
          reservation.salle.id === salle.id && !reservation.etat ?(
        <ModalReservation salleId={salle.id} />) :( null)))} //TODO*/}

<ModalReservation salleId={salle.id} />
<ModalUpdateSalle salle={salle}  />
      </Group>
              </Card>
                    
              </Grid.Col>
              
              ))}</Grid>
              </ul>
              
            )}
                  
          
   



      </main>
    </div>
  )
}